{
	"id": "128e66ff-c526-4d92-82ef-1d8d1b686ecd",
	"name": "diploma",
	"timestamp": "2025-05-22T16:44:28.976Z",
	"collection_id": "44838330-5c7d13ff-b4f7-41e5-aa06-4be5647fdbc6",
	"folder_id": 0,
	"environment_id": "0",
	"totalPass": 128,
	"delay": 0,
	"persist": true,
	"status": "finished",
	"startedAt": "2025-05-22T16:44:12.035Z",
	"totalFail": 70,
	"results": [
		{
			"id": "a6b4515a-3989-4c5c-b928-689beaa9cef9",
			"name": "create_first_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 319,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				319
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "fe329678-4baa-4111-a036-5d9163c7457f",
			"name": "create_second_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 312,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				312
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "cfc7104e-9b6d-4ea1-880d-c47dad0f3d0c",
			"name": "create_third_user",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 306,
			"responseCode": {
				"code": 201,
				"name": "Created"
			},
			"tests": {
				"Статус-код ответа должен быть 201": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				306
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "a4489873-d0fd-468d-a24a-656e89848d2f",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 310,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				310
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "a37f0470-0cde-4118-95ce-37a4da7e4dd0",
			"name": "get_token_for_second_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 319,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				319
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "a9fd0b45-c1ec-4ffc-bef7-69745a53b17b",
			"name": "user_registration_without_email",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f3ccf7cc-2221-45d7-a859-bfe449c49604",
			"name": "user_registration_without_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "62668d09-9e8d-4a3a-a47b-54f1ef818c79",
			"name": "user_registration_without_first_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "390477af-354a-46c1-91b7-6bb58aaa4f97",
			"name": "user_registration_without_last_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "8c0ce958-8a1c-4e66-9363-ad6cf65a140a",
			"name": "user_registration_without_password",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ee43e690-da97-4bcd-80e9-4392ee312f36",
			"name": "user_registration_too_long_email",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "42299334-8711-41af-9325-3dcd9706afb6",
			"name": "user_registration_too_long_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ae30fdcc-7d4a-420d-be94-822820d0c74e",
			"name": "user_registration_too_long_first_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 11,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "2440c002-aa91-4afa-8f45-fafca1245eb2",
			"name": "user_registration_too_long_last_name",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "35a0fe4b-83fb-482d-ac4c-3f119b3dd767",
			"name": "user_registration_with_invalid_username",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 566,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				566
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "55ab859b-b541-4539-b058-ff132fc947f3",
			"name": "user_registration_email_in_use",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "39b00e7f-0350-4a03-a345-8e66615afffb",
			"name": "user_registration_username_in_use",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "e98f6e21-35b0-40f1-9c8b-1b567b0c70cc",
			"name": "get_token_username_and_email_mismatch",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 292,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				292
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "6d5a918c-909f-4af2-b60c-2db5ddc36367",
			"name": "get_token_no_email",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "84283be7-3235-44a6-8192-cb88856492b2",
			"name": "get_token_no_password",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 3,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "be725fff-40eb-4eeb-963b-71b674779528",
			"name": "logout // User",
			"url": "http://127.0.0.1:8000/api/auth/token/logout/",
			"time": 19,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				19
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "a25a8198-f6b2-4856-8a1b-326b93111a61",
			"name": "get_token",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 307,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				307
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "4f9a5e94-5264-4222-829d-9f8fb03c0605",
			"name": "get_user_list // No Auth",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "9c9be62f-f147-4780-b5be-475c5e122835",
			"name": "get_user_list// User",
			"url": "http://127.0.0.1:8000/api/users/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "c3a3c065-9a6d-4fff-81eb-65525f1940b8",
			"name": "get_user_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/?limit=1",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что можно изменить количество объектов на странице через параметр `limit`": true
				}
			]
		},
		{
			"id": "93fdf0ca-4e1a-472d-a484-aa0ca6446e9c",
			"name": "get_profile // No Auth",
			"url": "http://127.0.0.1:8000/api/users/1/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "93e1753b-0812-4afc-b3ad-48c6ec3c96ae",
			"name": "get_profile // User",
			"url": "http://127.0.0.1:8000/api/users/1/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "3758fd7d-b9e8-4a60-80c8-ac81b520fe05",
			"name": "users_me // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `is_subscribed` в ответе должно иметь значение `false`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `is_subscribed` в ответе должно иметь значение `false`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `is_subscribed` в ответе должно иметь значение `false`": true
				}
			]
		},
		{
			"id": "16171685-0bd1-49cd-a4e8-56cfbe849690",
			"name": "set_avatar // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 30,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				30
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "f4f34890-c080-45c9-b05c-16724076134a",
			"name": "check_avatar_is_set // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Поле `avatar` должно содержать ссылку на аватар": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Поле `avatar` должно содержать ссылку на аватар": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Поле `avatar` должно содержать ссылку на аватар": false
				}
			]
		},
		{
			"id": "7ab4d045-f6a6-47bb-844e-9187db03b5c9",
			"name": "reset_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 599,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				599
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "c4529706-f458-4a41-b9d0-019cbcfb44b0",
			"name": "get_token_with_new_password",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 309,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				309
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "2f7ce018-73c3-4d53-80cd-5eb981c00e66",
			"name": "roll_back_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 593,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				593
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "d76506e6-fb78-407f-8e48-baeea5f7fa79",
			"name": "get_token_for_first_user",
			"url": "http://127.0.0.1:8000/api/auth/token/login/",
			"time": 314,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа соответствует ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				314
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа соответствует ожидаемой": true
				}
			]
		},
		{
			"id": "34fee6dc-2172-489b-871e-aa8732bfd11f",
			"name": "users_me // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "b55d7810-4944-4849-b317-e20d1aaf8659",
			"name": "get_non_existing_profile // User",
			"url": "http://127.0.0.1:8000/api/users/9876/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "b758470d-bd60-4c2c-8c97-10e59082ba33",
			"name": "reset_password_wrong_password // User",
			"url": "http://127.0.0.1:8000/api/users/set_password/",
			"time": 291,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				291
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5b9fa26c-c9f4-44cd-aa82-7088c7f73037",
			"name": "delete_avatar // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 4,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "bab57d95-f36b-4e56-a5cd-7b6c382b162f",
			"name": "set_avatar // No Auth",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "7b18fdde-3a4c-48a1-aaa8-704b40bd4f9b",
			"name": "set_avatar_empty_body // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 12,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "5f24e051-21c2-4b92-9757-9072aa30ecb4",
			"name": "delete_avatar // User",
			"url": "http://127.0.0.1:8000/api/users/me/avatar/",
			"time": 29,
			"responseCode": {
				"code": 204,
				"name": "No Content"
			},
			"tests": {
				"Статус-код ответа должен быть 204": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				29
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": true
				}
			]
		},
		{
			"id": "53da0e62-52fc-4777-8634-2f605b28d87b",
			"name": "check_avatar_is_deleted // User",
			"url": "http://127.0.0.1:8000/api/users/me/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Поле `avatar` должно быть пустым": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Поле `avatar` должно быть пустым": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Поле `avatar` должно быть пустым": true
				}
			]
		},
		{
			"id": "299c94d5-42a5-4ac3-99fa-af3928e986dc",
			"name": "get_ingredients_list // No Auth",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 26,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "fe26d047-8ed8-4720-b291-ed058510ab1e",
			"name": "get_ingredients_list // User",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 25,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "39d04a76-2182-4651-a43d-bd17fcd32282",
			"name": "get_ingredients_list_with_name_filter // User",
			"url": "http://127.0.0.1:8000/api/ingredients/?name=Б",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Ответ должен содержать данные, удовлетворяющие условиям поиска": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Ответ должен содержать данные, удовлетворяющие условиям поиска": true
				}
			]
		},
		{
			"id": "544619e4-8612-4bd0-83c4-e4a4f77ddccb",
			"name": "get_ingredient // No Auth",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "6072e6c5-f913-423a-8aa4-e93215b41b04",
			"name": "get_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "b8f6f2b0-d030-4740-be55-2091b6b32666",
			"name": "get_non_existing_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/9876/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "dc884c22-9a4d-4a14-9106-87c46c4d3589",
			"name": "create_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/",
			"time": 4,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "81396905-21ec-4a80-ae0e-7c67fd8ec7cd",
			"name": "put_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 5,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "d9cd055c-c07f-438f-873c-ef9b48ead8d9",
			"name": "patch_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 4,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "bc908607-b120-498e-912d-b7637d4fd8f1",
			"name": "delete_ingredient // User",
			"url": "http://127.0.0.1:8000/api/ingredients/170/",
			"time": 4,
			"responseCode": {
				"code": 405,
				"name": "Method Not Allowed"
			},
			"tests": {
				"Статус-код ответа должен быть 405": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 405": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 405": true
				}
			]
		},
		{
			"id": "1f3121b9-71b2-4260-9135-da4953f3bbbc",
			"name": "create_first_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 51,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				51
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "a238f306-3e66-4597-93a0-7489b063ff19",
			"name": "create_second_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "c9fff792-355b-497e-97d8-0b2a66e31fde",
			"name": "create_third_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "e6e3d22f-1ad2-4c86-8293-778bc0291947",
			"name": "create_fourth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "f943025e-cf5d-468d-8d63-25bff58a8930",
			"name": "create_fifth_recipe // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответстовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответстовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответстовать ожидаемой": false
				}
			]
		},
		{
			"id": "d33a44df-31e9-470e-8650-2af7aa997a8f",
			"name": "get_recipes_list // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "b0f53a8e-27a6-40b4-8827-877abdeeab43",
			"name": "get_recipes_list // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "971aeb89-5d21-480b-918a-ec304ebc6a61",
			"name": "get_recipes_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?limit=2",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр `limit`": false
				}
			]
		},
		{
			"id": "7d8ab91d-3066-4c1e-b91f-79b55edde507",
			"name": "get_recipes_list_with_author_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?author=1",
			"time": 23,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтрации рецептов через параметр запроса `author`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				23
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтрации рецептов через параметр запроса `author`": false
				}
			]
		},
		{
			"id": "ec2c5d15-8915-449f-bd75-b23655d4bb96",
			"name": "get_recipe_detail // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "c8b6466a-4478-432c-8d6d-f763f02cdebe",
			"name": "get_recipe_detail // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "a118d49a-f067-4dab-b18a-6c71b2453485",
			"name": "get_recipe_short_link // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/get-link/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "e71cb4f9-33ab-4769-9710-46745d84c529",
			"name": "get_recipe_short_link // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/get-link/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "68ba02e7-4885-4202-acbd-213ff697fffc",
			"name": "update_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false,
				"Структура ответа соответствует ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа соответствует ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false,
					"Структура ответа соответствует ожидаемой": false
				}
			]
		},
		{
			"id": "836a9f4c-2dce-4f62-a31e-a608f28aa968",
			"name": "create_recipe_without_ingredients // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "08376d24-30f6-45de-9e3a-5714fa1b3a9f",
			"name": "create_recipe_empty_ingredients_fields // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "0fbbcd30-2e54-418f-b9b4-491d7eb385ec",
			"name": "create_recipe_with_non_existing_ingredient // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 9,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "b4feb433-2240-4be3-b8a8-c10cc077b33a",
			"name": "create_recipe_with_ingredient_amount_less_than_one // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "4d1ccb46-04ba-4402-a7ae-eec5513dad29",
			"name": "create_recipe_with_repetitive_ingredients // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a514dd02-80f6-4f47-8346-e2d2bf17a91f",
			"name": "create_recipe_without_image_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9e169ffa-a3de-468f-a05c-265605c67a64",
			"name": "create_recipe_empty_image // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "94011fa7-3149-4223-b9ce-e3e3a8458b92",
			"name": "create_recipe_without_name_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "9ddfce5c-de7c-4586-94e5-76ec55f9219f",
			"name": "create_recipe_empty_name // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "78ff1519-2c59-4028-9a6a-2a623a55cbce",
			"name": "create_recipe_too_long_name // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f1c67dbe-3294-4475-9dfb-081efe2b758c",
			"name": "create_recipe_without_text_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "7dc5da54-e4d0-421b-b169-43f54f5fb12a",
			"name": "create_recipe_empty_text // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a184c7fa-31a4-466d-ae38-0601bb1b6a9e",
			"name": "create_recipe_without_cooking_time_field // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "f6732628-dfc1-4fbb-9817-609a1bc8c552",
			"name": "create_recipe_empty_string_as_cooking_time // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "ba956e60-c9e1-4d90-9f24-fae7d4794a22",
			"name": "create_recipe_cooking_time_less_than_one // User",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 6,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 400": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": true
				}
			]
		},
		{
			"id": "a58b7a4b-88ad-47e1-8797-e17b06a00b54",
			"name": "create_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "949f64bd-8b87-4015-9a28-5523a03aa457",
			"name": "update_recipe_not_author // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "3caa6b24-536d-4b8f-959c-87b119bf16e9",
			"name": "update_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "c52c46f4-c031-4d9c-9fec-a3268a29b18f",
			"name": "update_recipe_without_ingredients_field // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "8f213e2c-6a8c-4126-8fe2-85c0701fd085",
			"name": "update_recipe_empty_ingredients // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "9acca689-9cc5-4d07-bbc4-8aaf34da2ee3",
			"name": "update_recipe_with_non_existing_ingredient // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "d8fabc6c-01fa-4450-943e-502068bd5c41",
			"name": "update_recipe_with_ingredient_amount_less_than_one // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "12d38548-6d4c-4492-830a-4abc84e67d50",
			"name": "update_recipe_with_repetitive_ingredients // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "28c42e5c-d244-4ef9-8245-abe390e39068",
			"name": "update_recipe_empty_image  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "929a1f97-1311-4510-a44d-3c904693d369",
			"name": "update_recipe_empty_name  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 12,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				12
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "c49355fb-d8ee-4426-bc5d-697d03443513",
			"name": "update_recipe_too_long_name  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "e9a1af95-89de-4139-a8a6-a0047d6441e7",
			"name": "update_recipe_empty_text  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "6e0bdde6-9983-4d70-aeef-3e67d3e58ca7",
			"name": "update_recipe_empty_string_as_cooking_time  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "c383858c-a318-44e2-b6a2-889f9a469f1d",
			"name": "update_recipe_empty_cooking_time_less_than_one  // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "2c99d3ac-cf18-4abd-825f-3887e35168a8",
			"name": "update_none_existing_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "418d2ad0-1ddd-450e-97a1-c5ce05260411",
			"name": "create_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 26,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "9b3d1c0c-22d7-4afb-b5ea-83a5e2074d10",
			"name": "create_subscription_with_recipes_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/2/subscribe/?recipes_limit=2",
			"time": 24,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false,
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				},
				"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false,
					"Должна быть возможность изменить количество выводимых рецептов в данных пользователя через параметр `recipes_limit`": false
				}
			]
		},
		{
			"id": "b9a292ce-f2ba-4b9d-9088-582153fe7f2e",
			"name": "get_subscription_list // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "da8a3e18-ea45-4a12-a54e-3f6cae898325",
			"name": "get_subscription_list_with_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/?limit=1",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность изменить количество объектов на странице через параметр запроса `limit`": false
				}
			]
		},
		{
			"id": "7bb537b2-3ddc-42d3-835e-60cdef38e6d4",
			"name": "get_subscription_list_with_recipes_limit_param // User",
			"url": "http://127.0.0.1:8000/api/users/subscriptions/?recipes_limit=2",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Убедитесь, что количество выводимых рецептов в данных пользователя можно изменить через параметр `recipes_limit`": true
				}
			]
		},
		{
			"id": "2e43e531-814d-446f-822b-b222fb1f427b",
			"name": "create_subscription // No Auth",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "6c0b5b08-147a-48e7-93ae-06b9c07668db",
			"name": "create_duplicated_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 24,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "46bdc602-6bfe-4c50-b932-45eff56b9e6b",
			"name": "create_self_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/1/subscribe/",
			"time": 24,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "67e6c946-31fc-44b5-8df5-9c149cb12d36",
			"name": "create_subscription_to_non_existing_author // User",
			"url": "http://127.0.0.1:8000/api/users/9876/subscribe/",
			"time": 24,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 404": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				24
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": false
				}
			]
		},
		{
			"id": "715840ad-2402-4f3d-92ce-0e0fbbd69849",
			"name": "add_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 41,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				41
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "1ee661ee-0dca-4445-8a73-cbebe7ca6bdc",
			"name": "download_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/download_shopping_cart/",
			"time": 5,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 200": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": false
				}
			]
		},
		{
			"id": "93e4d4ba-8b54-4e52-88f1-c21562aa3f1b",
			"name": "add_to_shopping_cart // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "ddcbf7ce-143e-45ae-bcd8-157edd311a1e",
			"name": "add_again_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 39,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "f22d081e-2ce0-4aa9-bb4c-55c6e33f9fbc",
			"name": "add_non_existing_recipe_to_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/shopping_cart/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "243bf216-49e9-47c2-80e4-00e36cf63cdd",
			"name": "add_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 39,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 201": false,
				"Структура ответа должна соответствовать ожидаемой": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 201": {
					"pass": 0,
					"fail": 1
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 201": false,
					"Структура ответа должна соответствовать ожидаемой": false
				}
			]
		},
		{
			"id": "79276692-29ca-439d-9554-7b7b889c887b",
			"name": "add_to_favorite // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 11,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				11
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "435cf087-b381-4a4e-bff8-311b1e9e7c02",
			"name": "add_again_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 74,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				74
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "049d663c-f7ac-4064-a920-26c25d985876",
			"name": "add_non_existing_recipe_to_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/favorite/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "b19735fa-ea73-44ac-8a40-799b2cd10d33",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?is_in_shopping_cart=1",
			"time": 6,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_in_shopping_cart`": false
				}
			]
		},
		{
			"id": "06b18bca-0954-4a46-a9d2-177c23e6e02b",
			"name": "get_recipes_list_with_is_in_shopping_cart_param // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/?is_in_shopping_cart=1",
			"time": 4,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "48be30a4-fc65-400c-8171-91633a4c2ed3",
			"name": "get_recipes_list_with_is_favorited_param // User",
			"url": "http://127.0.0.1:8000/api/recipes/?is_favorited=1",
			"time": 7,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true,
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				},
				"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				7
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true,
					"Должна быть возможность фильтровать рецепты через параметр запроса `is_favorited`": false
				}
			]
		},
		{
			"id": "770251bc-5f57-41bd-8809-183925d457ca",
			"name": "get_recipes_list_with_is_favorited_param // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/?is_favorited=1",
			"time": 5,
			"responseCode": {
				"code": 200,
				"name": "OK"
			},
			"tests": {
				"Статус-код ответа должен быть 200": true,
				"Структура ответа должна соответствовать ожидаемой": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 200": {
					"pass": 1,
					"fail": 0
				},
				"Структура ответа должна соответствовать ожидаемой": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 200": true,
					"Структура ответа должна соответствовать ожидаемой": true
				}
			]
		},
		{
			"id": "bfd94b78-3e94-48e3-9c11-78d27bc831e9",
			"name": "delete_subscription // No Auth",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "b1a3f904-60d7-40e9-99ba-80c0f00992da",
			"name": "delete_non_existing_subscription // Second User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 26,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "9fd6357d-463f-4b23-8a61-77b0e0d8bbb8",
			"name": "delete_subscription_with_non_existing_author_in_url // Second User",
			"url": "http://127.0.0.1:8000/api/users/9876/subscribe/",
			"time": 26,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 404": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				26
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": false
				}
			]
		},
		{
			"id": "028afbbd-96d6-482b-9a61-6bed2b3b048f",
			"name": "delete_first_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/3/subscribe/",
			"time": 25,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "28a79692-a984-4ee7-b2a8-1e35851e27ce",
			"name": "delete_second_subscription // User",
			"url": "http://127.0.0.1:8000/api/users/2/subscribe/",
			"time": 25,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				25
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "bc623f9a-e8c6-4d4d-9f14-b9838393a219",
			"name": "remove_from_shopping_cart // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "ec97df36-2e69-4469-a289-e180fc7a2556",
			"name": "remove_not_added_from_shopping_cart // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 41,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				41
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "0c876cd6-65b3-4840-97f1-a47ac13bad59",
			"name": "remove_non_existing_recipe_from_shopping_cart // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/shopping_cart/",
			"time": 9,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				9
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "5b734342-432b-4643-9eb1-878a6a5baa01",
			"name": "remove_from_shopping_cart // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/shopping_cart/",
			"time": 38,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				38
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "66c47eed-e915-41f0-b7ad-05e0b3997c24",
			"name": "remove_from_favorite // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "ea0c7845-d807-42b9-abe7-15548bf98dc9",
			"name": "remove_not_added_from_favorite // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 39,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 400": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 400": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				39
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 400": false
				}
			]
		},
		{
			"id": "4e7ada57-2936-4193-a088-6f8882b7f591",
			"name": "remove_non_existing_recipe_from_favorite // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/favorite/",
			"time": 5,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				5
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "9b5baa9a-f5c1-4b3f-8956-cc5aaa9dea5c",
			"name": "remove_from_favorite // User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/favorite/",
			"time": 40,
			"responseCode": {
				"code": 500,
				"name": "Internal Server Error"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				40
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "b0337d6b-4162-4023-8b16-54c5850d7f05",
			"name": "delete_recipe // No Auth",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 3,
			"responseCode": {
				"code": 401,
				"name": "Unauthorized"
			},
			"tests": {
				"Статус-код ответа должен быть 401": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 401": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				3
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 401": true
				}
			]
		},
		{
			"id": "1d4cb4fa-7dbe-4db2-b05b-d94aacd2b845",
			"name": "delete_recipe_not_by_author // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 403": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 403": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 403": false
				}
			]
		},
		{
			"id": "8b03d785-6ec2-46c1-805d-5cc994dbdf5e",
			"name": "delete_non_existing_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/9876/",
			"time": 6,
			"responseCode": {
				"code": 404,
				"name": "Not Found"
			},
			"tests": {
				"Статус-код ответа должен быть 404": true
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 404": {
					"pass": 1,
					"fail": 0
				}
			},
			"times": [
				6
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 404": true
				}
			]
		},
		{
			"id": "75a8ad1c-a9da-446e-b76e-addc9632b36e",
			"name": "delete_first_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{firstRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "04ab9844-2b22-4113-9dcc-882f6635b109",
			"name": "delete_second_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{secondRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "c24a23de-0832-40cc-96f0-a8e1417dd738",
			"name": "delete_third_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{thirdRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "956038d8-e58c-42a8-ae7b-fc39dea64235",
			"name": "delete_fourth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fourthRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		},
		{
			"id": "c109ee76-e04d-4d58-81ff-f8c5308d3aaa",
			"name": "delete_fifth_recipe // Second User",
			"url": "http://127.0.0.1:8000/api/recipes/{{fifthRecipeId}}/",
			"time": 4,
			"responseCode": {
				"code": 400,
				"name": "Bad Request"
			},
			"tests": {
				"Статус-код ответа должен быть 204": false
			},
			"testPassFailCounts": {
				"Статус-код ответа должен быть 204": {
					"pass": 0,
					"fail": 1
				}
			},
			"times": [
				4
			],
			"allTests": [
				{
					"Статус-код ответа должен быть 204": false
				}
			]
		}
	],
	"count": 1,
	"totalTime": 6161,
	"collection": {
		"requests": [
			{
				"id": "a6b4515a-3989-4c5c-b928-689beaa9cef9",
				"method": "POST"
			},
			{
				"id": "fe329678-4baa-4111-a036-5d9163c7457f",
				"method": "POST"
			},
			{
				"id": "cfc7104e-9b6d-4ea1-880d-c47dad0f3d0c",
				"method": "POST"
			},
			{
				"id": "a4489873-d0fd-468d-a24a-656e89848d2f",
				"method": "POST"
			},
			{
				"id": "a37f0470-0cde-4118-95ce-37a4da7e4dd0",
				"method": "POST"
			},
			{
				"id": "a9fd0b45-c1ec-4ffc-bef7-69745a53b17b",
				"method": "POST"
			},
			{
				"id": "f3ccf7cc-2221-45d7-a859-bfe449c49604",
				"method": "POST"
			},
			{
				"id": "62668d09-9e8d-4a3a-a47b-54f1ef818c79",
				"method": "POST"
			},
			{
				"id": "390477af-354a-46c1-91b7-6bb58aaa4f97",
				"method": "POST"
			},
			{
				"id": "8c0ce958-8a1c-4e66-9363-ad6cf65a140a",
				"method": "POST"
			},
			{
				"id": "ee43e690-da97-4bcd-80e9-4392ee312f36",
				"method": "POST"
			},
			{
				"id": "42299334-8711-41af-9325-3dcd9706afb6",
				"method": "POST"
			},
			{
				"id": "ae30fdcc-7d4a-420d-be94-822820d0c74e",
				"method": "POST"
			},
			{
				"id": "2440c002-aa91-4afa-8f45-fafca1245eb2",
				"method": "POST"
			},
			{
				"id": "35a0fe4b-83fb-482d-ac4c-3f119b3dd767",
				"method": "POST"
			},
			{
				"id": "55ab859b-b541-4539-b058-ff132fc947f3",
				"method": "POST"
			},
			{
				"id": "39b00e7f-0350-4a03-a345-8e66615afffb",
				"method": "POST"
			},
			{
				"id": "e98f6e21-35b0-40f1-9c8b-1b567b0c70cc",
				"method": "POST"
			},
			{
				"id": "6d5a918c-909f-4af2-b60c-2db5ddc36367",
				"method": "POST"
			},
			{
				"id": "84283be7-3235-44a6-8192-cb88856492b2",
				"method": "POST"
			},
			{
				"id": "be725fff-40eb-4eeb-963b-71b674779528",
				"method": "POST"
			},
			{
				"id": "a25a8198-f6b2-4856-8a1b-326b93111a61",
				"method": "POST"
			},
			{
				"id": "4f9a5e94-5264-4222-829d-9f8fb03c0605",
				"method": "GET"
			},
			{
				"id": "9c9be62f-f147-4780-b5be-475c5e122835",
				"method": "GET"
			},
			{
				"id": "c3a3c065-9a6d-4fff-81eb-65525f1940b8",
				"method": "GET"
			},
			{
				"id": "93fdf0ca-4e1a-472d-a484-aa0ca6446e9c",
				"method": "GET"
			},
			{
				"id": "93e1753b-0812-4afc-b3ad-48c6ec3c96ae",
				"method": "GET"
			},
			{
				"id": "3758fd7d-b9e8-4a60-80c8-ac81b520fe05",
				"method": "GET"
			},
			{
				"id": "16171685-0bd1-49cd-a4e8-56cfbe849690",
				"method": "PUT"
			},
			{
				"id": "f4f34890-c080-45c9-b05c-16724076134a",
				"method": "GET"
			},
			{
				"id": "7ab4d045-f6a6-47bb-844e-9187db03b5c9",
				"method": "POST"
			},
			{
				"id": "c4529706-f458-4a41-b9d0-019cbcfb44b0",
				"method": "POST"
			},
			{
				"id": "2f7ce018-73c3-4d53-80cd-5eb981c00e66",
				"method": "POST"
			},
			{
				"id": "d76506e6-fb78-407f-8e48-baeea5f7fa79",
				"method": "POST"
			},
			{
				"id": "34fee6dc-2172-489b-871e-aa8732bfd11f",
				"method": "GET"
			},
			{
				"id": "b55d7810-4944-4849-b317-e20d1aaf8659",
				"method": "GET"
			},
			{
				"id": "b758470d-bd60-4c2c-8c97-10e59082ba33",
				"method": "POST"
			},
			{
				"id": "5b9fa26c-c9f4-44cd-aa82-7088c7f73037",
				"method": "DELETE"
			},
			{
				"id": "bab57d95-f36b-4e56-a5cd-7b6c382b162f",
				"method": "PUT"
			},
			{
				"id": "7b18fdde-3a4c-48a1-aaa8-704b40bd4f9b",
				"method": "PUT"
			},
			{
				"id": "5f24e051-21c2-4b92-9757-9072aa30ecb4",
				"method": "DELETE"
			},
			{
				"id": "53da0e62-52fc-4777-8634-2f605b28d87b",
				"method": "GET"
			},
			{
				"id": "299c94d5-42a5-4ac3-99fa-af3928e986dc",
				"method": "GET"
			},
			{
				"id": "fe26d047-8ed8-4720-b291-ed058510ab1e",
				"method": "GET"
			},
			{
				"id": "39d04a76-2182-4651-a43d-bd17fcd32282",
				"method": "GET"
			},
			{
				"id": "544619e4-8612-4bd0-83c4-e4a4f77ddccb",
				"method": "GET"
			},
			{
				"id": "6072e6c5-f913-423a-8aa4-e93215b41b04",
				"method": "GET"
			},
			{
				"id": "b8f6f2b0-d030-4740-be55-2091b6b32666",
				"method": "GET"
			},
			{
				"id": "dc884c22-9a4d-4a14-9106-87c46c4d3589",
				"method": "POST"
			},
			{
				"id": "81396905-21ec-4a80-ae0e-7c67fd8ec7cd",
				"method": "PUT"
			},
			{
				"id": "d9cd055c-c07f-438f-873c-ef9b48ead8d9",
				"method": "PATCH"
			},
			{
				"id": "bc908607-b120-498e-912d-b7637d4fd8f1",
				"method": "DELETE"
			},
			{
				"id": "1f3121b9-71b2-4260-9135-da4953f3bbbc",
				"method": "POST"
			},
			{
				"id": "a238f306-3e66-4597-93a0-7489b063ff19",
				"method": "POST"
			},
			{
				"id": "c9fff792-355b-497e-97d8-0b2a66e31fde",
				"method": "POST"
			},
			{
				"id": "e6e3d22f-1ad2-4c86-8293-778bc0291947",
				"method": "POST"
			},
			{
				"id": "f943025e-cf5d-468d-8d63-25bff58a8930",
				"method": "POST"
			},
			{
				"id": "d33a44df-31e9-470e-8650-2af7aa997a8f",
				"method": "GET"
			},
			{
				"id": "b0f53a8e-27a6-40b4-8827-877abdeeab43",
				"method": "GET"
			},
			{
				"id": "971aeb89-5d21-480b-918a-ec304ebc6a61",
				"method": "GET"
			},
			{
				"id": "7d8ab91d-3066-4c1e-b91f-79b55edde507",
				"method": "GET"
			},
			{
				"id": "ec2c5d15-8915-449f-bd75-b23655d4bb96",
				"method": "GET"
			},
			{
				"id": "c8b6466a-4478-432c-8d6d-f763f02cdebe",
				"method": "GET"
			},
			{
				"id": "a118d49a-f067-4dab-b18a-6c71b2453485",
				"method": "GET"
			},
			{
				"id": "e71cb4f9-33ab-4769-9710-46745d84c529",
				"method": "GET"
			},
			{
				"id": "68ba02e7-4885-4202-acbd-213ff697fffc",
				"method": "PATCH"
			},
			{
				"id": "836a9f4c-2dce-4f62-a31e-a608f28aa968",
				"method": "POST"
			},
			{
				"id": "08376d24-30f6-45de-9e3a-5714fa1b3a9f",
				"method": "POST"
			},
			{
				"id": "0fbbcd30-2e54-418f-b9b4-491d7eb385ec",
				"method": "POST"
			},
			{
				"id": "b4feb433-2240-4be3-b8a8-c10cc077b33a",
				"method": "POST"
			},
			{
				"id": "4d1ccb46-04ba-4402-a7ae-eec5513dad29",
				"method": "POST"
			},
			{
				"id": "a514dd02-80f6-4f47-8346-e2d2bf17a91f",
				"method": "POST"
			},
			{
				"id": "9e169ffa-a3de-468f-a05c-265605c67a64",
				"method": "POST"
			},
			{
				"id": "94011fa7-3149-4223-b9ce-e3e3a8458b92",
				"method": "POST"
			},
			{
				"id": "9ddfce5c-de7c-4586-94e5-76ec55f9219f",
				"method": "POST"
			},
			{
				"id": "78ff1519-2c59-4028-9a6a-2a623a55cbce",
				"method": "POST"
			},
			{
				"id": "f1c67dbe-3294-4475-9dfb-081efe2b758c",
				"method": "POST"
			},
			{
				"id": "7dc5da54-e4d0-421b-b169-43f54f5fb12a",
				"method": "POST"
			},
			{
				"id": "a184c7fa-31a4-466d-ae38-0601bb1b6a9e",
				"method": "POST"
			},
			{
				"id": "f6732628-dfc1-4fbb-9817-609a1bc8c552",
				"method": "POST"
			},
			{
				"id": "ba956e60-c9e1-4d90-9f24-fae7d4794a22",
				"method": "POST"
			},
			{
				"id": "a58b7a4b-88ad-47e1-8797-e17b06a00b54",
				"method": "POST"
			},
			{
				"id": "949f64bd-8b87-4015-9a28-5523a03aa457",
				"method": "PATCH"
			},
			{
				"id": "3caa6b24-536d-4b8f-959c-87b119bf16e9",
				"method": "PATCH"
			},
			{
				"id": "c52c46f4-c031-4d9c-9fec-a3268a29b18f",
				"method": "PATCH"
			},
			{
				"id": "8f213e2c-6a8c-4126-8fe2-85c0701fd085",
				"method": "PATCH"
			},
			{
				"id": "9acca689-9cc5-4d07-bbc4-8aaf34da2ee3",
				"method": "PATCH"
			},
			{
				"id": "d8fabc6c-01fa-4450-943e-502068bd5c41",
				"method": "PATCH"
			},
			{
				"id": "12d38548-6d4c-4492-830a-4abc84e67d50",
				"method": "PATCH"
			},
			{
				"id": "28c42e5c-d244-4ef9-8245-abe390e39068",
				"method": "PATCH"
			},
			{
				"id": "929a1f97-1311-4510-a44d-3c904693d369",
				"method": "PATCH"
			},
			{
				"id": "c49355fb-d8ee-4426-bc5d-697d03443513",
				"method": "PATCH"
			},
			{
				"id": "e9a1af95-89de-4139-a8a6-a0047d6441e7",
				"method": "PATCH"
			},
			{
				"id": "6e0bdde6-9983-4d70-aeef-3e67d3e58ca7",
				"method": "PATCH"
			},
			{
				"id": "c383858c-a318-44e2-b6a2-889f9a469f1d",
				"method": "PATCH"
			},
			{
				"id": "2c99d3ac-cf18-4abd-825f-3887e35168a8",
				"method": "PATCH"
			},
			{
				"id": "418d2ad0-1ddd-450e-97a1-c5ce05260411",
				"method": "POST"
			},
			{
				"id": "9b3d1c0c-22d7-4afb-b5ea-83a5e2074d10",
				"method": "POST"
			},
			{
				"id": "b9a292ce-f2ba-4b9d-9088-582153fe7f2e",
				"method": "GET"
			},
			{
				"id": "da8a3e18-ea45-4a12-a54e-3f6cae898325",
				"method": "GET"
			},
			{
				"id": "7bb537b2-3ddc-42d3-835e-60cdef38e6d4",
				"method": "GET"
			},
			{
				"id": "2e43e531-814d-446f-822b-b222fb1f427b",
				"method": "POST"
			},
			{
				"id": "6c0b5b08-147a-48e7-93ae-06b9c07668db",
				"method": "POST"
			},
			{
				"id": "46bdc602-6bfe-4c50-b932-45eff56b9e6b",
				"method": "POST"
			},
			{
				"id": "67e6c946-31fc-44b5-8df5-9c149cb12d36",
				"method": "POST"
			},
			{
				"id": "715840ad-2402-4f3d-92ce-0e0fbbd69849",
				"method": "POST"
			},
			{
				"id": "1ee661ee-0dca-4445-8a73-cbebe7ca6bdc",
				"method": "GET"
			},
			{
				"id": "93e4d4ba-8b54-4e52-88f1-c21562aa3f1b",
				"method": "POST"
			},
			{
				"id": "ddcbf7ce-143e-45ae-bcd8-157edd311a1e",
				"method": "POST"
			},
			{
				"id": "f22d081e-2ce0-4aa9-bb4c-55c6e33f9fbc",
				"method": "POST"
			},
			{
				"id": "243bf216-49e9-47c2-80e4-00e36cf63cdd",
				"method": "POST"
			},
			{
				"id": "79276692-29ca-439d-9554-7b7b889c887b",
				"method": "POST"
			},
			{
				"id": "435cf087-b381-4a4e-bff8-311b1e9e7c02",
				"method": "POST"
			},
			{
				"id": "049d663c-f7ac-4064-a920-26c25d985876",
				"method": "POST"
			},
			{
				"id": "b19735fa-ea73-44ac-8a40-799b2cd10d33",
				"method": "GET"
			},
			{
				"id": "06b18bca-0954-4a46-a9d2-177c23e6e02b",
				"method": "GET"
			},
			{
				"id": "48be30a4-fc65-400c-8171-91633a4c2ed3",
				"method": "GET"
			},
			{
				"id": "770251bc-5f57-41bd-8809-183925d457ca",
				"method": "GET"
			},
			{
				"id": "bfd94b78-3e94-48e3-9c11-78d27bc831e9",
				"method": "DELETE"
			},
			{
				"id": "b1a3f904-60d7-40e9-99ba-80c0f00992da",
				"method": "DELETE"
			},
			{
				"id": "9fd6357d-463f-4b23-8a61-77b0e0d8bbb8",
				"method": "DELETE"
			},
			{
				"id": "028afbbd-96d6-482b-9a61-6bed2b3b048f",
				"method": "DELETE"
			},
			{
				"id": "28a79692-a984-4ee7-b2a8-1e35851e27ce",
				"method": "DELETE"
			},
			{
				"id": "bc623f9a-e8c6-4d4d-9f14-b9838393a219",
				"method": "DELETE"
			},
			{
				"id": "ec97df36-2e69-4469-a289-e180fc7a2556",
				"method": "DELETE"
			},
			{
				"id": "0c876cd6-65b3-4840-97f1-a47ac13bad59",
				"method": "DELETE"
			},
			{
				"id": "5b734342-432b-4643-9eb1-878a6a5baa01",
				"method": "DELETE"
			},
			{
				"id": "66c47eed-e915-41f0-b7ad-05e0b3997c24",
				"method": "DELETE"
			},
			{
				"id": "ea0c7845-d807-42b9-abe7-15548bf98dc9",
				"method": "DELETE"
			},
			{
				"id": "4e7ada57-2936-4193-a088-6f8882b7f591",
				"method": "DELETE"
			},
			{
				"id": "9b5baa9a-f5c1-4b3f-8956-cc5aaa9dea5c",
				"method": "DELETE"
			},
			{
				"id": "b0337d6b-4162-4023-8b16-54c5850d7f05",
				"method": "DELETE"
			},
			{
				"id": "1d4cb4fa-7dbe-4db2-b05b-d94aacd2b845",
				"method": "DELETE"
			},
			{
				"id": "8b03d785-6ec2-46c1-805d-5cc994dbdf5e",
				"method": "DELETE"
			},
			{
				"id": "75a8ad1c-a9da-446e-b76e-addc9632b36e",
				"method": "DELETE"
			},
			{
				"id": "04ab9844-2b22-4113-9dcc-882f6635b109",
				"method": "DELETE"
			},
			{
				"id": "c24a23de-0832-40cc-96f0-a8e1417dd738",
				"method": "DELETE"
			},
			{
				"id": "956038d8-e58c-42a8-ae7b-fc39dea64235",
				"method": "DELETE"
			},
			{
				"id": "c109ee76-e04d-4d58-81ff-f8c5308d3aaa",
				"method": "DELETE"
			}
		]
	}
}